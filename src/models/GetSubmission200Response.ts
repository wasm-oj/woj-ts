/* tslint:disable */
/* eslint-disable */
/**
 * WASM OJ Wonderland API
 * You can interact with WASM OJ Wonderland through this API
 *
 * The version of the OpenAPI document: 0.0.4
 * Contact: jacob@csie.cool
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GetProblem200ResponseProblem } from './GetProblem200ResponseProblem';
import {
    GetProblem200ResponseProblemFromJSON,
    GetProblem200ResponseProblemFromJSONTyped,
    GetProblem200ResponseProblemToJSON,
} from './GetProblem200ResponseProblem';
import type { GetSubmission200ResponseSubmission } from './GetSubmission200ResponseSubmission';
import {
    GetSubmission200ResponseSubmissionFromJSON,
    GetSubmission200ResponseSubmissionFromJSONTyped,
    GetSubmission200ResponseSubmissionToJSON,
} from './GetSubmission200ResponseSubmission';

/**
 * 
 * @export
 * @interface GetSubmission200Response
 */
export interface GetSubmission200Response {
    /**
     * 
     * @type {GetSubmission200ResponseSubmission}
     * @memberof GetSubmission200Response
     */
    submission: GetSubmission200ResponseSubmission;
    /**
     * 
     * @type {GetProblem200ResponseProblem}
     * @memberof GetSubmission200Response
     */
    problem: GetProblem200ResponseProblem;
}

/**
 * Check if a given object implements the GetSubmission200Response interface.
 */
export function instanceOfGetSubmission200Response(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "submission" in value;
    isInstance = isInstance && "problem" in value;

    return isInstance;
}

export function GetSubmission200ResponseFromJSON(json: any): GetSubmission200Response {
    return GetSubmission200ResponseFromJSONTyped(json, false);
}

export function GetSubmission200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetSubmission200Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'submission': GetSubmission200ResponseSubmissionFromJSON(json['submission']),
        'problem': GetProblem200ResponseProblemFromJSON(json['problem']),
    };
}

export function GetSubmission200ResponseToJSON(value?: GetSubmission200Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'submission': GetSubmission200ResponseSubmissionToJSON(value.submission),
        'problem': GetProblem200ResponseProblemToJSON(value.problem),
    };
}

