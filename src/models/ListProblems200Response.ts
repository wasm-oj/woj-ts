/* tslint:disable */
/* eslint-disable */
/**
 * WASM OJ Wonderland API
 * You can interact with WASM OJ Wonderland through this API
 *
 * The version of the OpenAPI document: 0.0.4
 * Contact: jacob@csie.cool
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ListProblems200ResponseProblemsInner } from './ListProblems200ResponseProblemsInner';
import {
    ListProblems200ResponseProblemsInnerFromJSON,
    ListProblems200ResponseProblemsInnerFromJSONTyped,
    ListProblems200ResponseProblemsInnerToJSON,
} from './ListProblems200ResponseProblemsInner';

/**
 * 
 * @export
 * @interface ListProblems200Response
 */
export interface ListProblems200Response {
    /**
     * List of problems
     * @type {Array<ListProblems200ResponseProblemsInner>}
     * @memberof ListProblems200Response
     */
    problems: Array<ListProblems200ResponseProblemsInner>;
}

/**
 * Check if a given object implements the ListProblems200Response interface.
 */
export function instanceOfListProblems200Response(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "problems" in value;

    return isInstance;
}

export function ListProblems200ResponseFromJSON(json: any): ListProblems200Response {
    return ListProblems200ResponseFromJSONTyped(json, false);
}

export function ListProblems200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListProblems200Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'problems': ((json['problems'] as Array<any>).map(ListProblems200ResponseProblemsInnerFromJSON)),
    };
}

export function ListProblems200ResponseToJSON(value?: ListProblems200Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'problems': ((value.problems as Array<any>).map(ListProblems200ResponseProblemsInnerToJSON)),
    };
}

